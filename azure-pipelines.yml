name: $(BuildDefinitionName)_$(Date:yyyyMMdd)$(Rev:.rr)
variables:
  CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
  CIBW_MANYLINUX_I686_IMAGE: manylinux2014
  JSOC_EMAIL: "jsoc@cadair.com"  # For the example gallery on the dev deps build

schedules:
  - cron: "0 9 * * *"
         # \ \ \ \ \______ Days of week
         #  \ \ \ \_______ Months
         #   \ \ \________ Days
         #    \ \__________Hours
         #     \__________ Minutes
    displayName: Daily 9am UTC build
    branches:
      include:
      - main
      - 3.0
      - 3.1
    always: true

resources:
  repositories:
  - repository: OpenAstronomy
    type: github
    endpoint: odidev
    name: OpenAstronomy/azure-pipelines-templates

trigger:
  branches:
    include:
    - '*'
    exclude:
    - '*backport*'
  tags:
    include:
    - 'v*'
    exclude:
    - '*dev*'
    - '*pre*'
    - '*post*'

pr:
  autoCancel: true

stages:

  # On branches which aren't main, and not Pull Requests, build the wheels but only upload them on tags
 # - ${{ if and(ne(variables['Build.Reason'], 'PullRequest'), or(ne(variables['Build.SourceBranchName'], 'main'), eq(variables['Build.Reason'], 'Schedule'), eq(variables['Build.Reason'], 'Manual'))) }}:
    - stage: Release
      #dependsOn: SecondPhaseTests
      jobs:
      - template: publish.yml@OpenAstronomy
        parameters:
          # Only Upload to PyPI on tags
          ${{ if startsWith(variables['Build.SourceBranch'], 'refs/tags/') }}:
            pypi_connection_name : 'PyPI'
          test_extras: 'dev'
          test_command: 'pytest -p no:warnings --doctest-rst -m "not mpl_image_compare" --pyargs sunpy'
          submodules: false
          targets:
            - wheels_cp3[789]-manylinux*x86_64
            - wheels_cp3[789]-manylinux*aarch64
            - wheels_cp3[789]-macosx*
            - wheels_cp310-manylinux*x86_64
            - wheels_cp310-manylinux*aarch64
            - wheels_cp310-macosx*
            - sdist

  - ${{ if or(eq(variables['Build.Reason'], 'Schedule'), eq(variables['Build.Reason'], 'Manual')) }}:
    - stage: CronNotifier_OK
      condition: succeeded()
      dependsOn:
        - SecondPhaseTestsAllowedFail
        - SecondPhaseTests
        - CronTests
        - Release
      jobs:
      - job: notify
        pool:
          vmImage: ubuntu-20.04
        steps:
        - bash: |
            sudo apt-get install httpie xonsh
            http --version
        - bash: xonsh ./tools/send_matrix_message.xsh
          env:
            ROOMID: '%21JYqfIVJjWANcHnfktY:cadair.com'  # sunpy development room
            HOMESERVER: 'https://matrix.cadair.com'
            BRANCH: $(Build.SourceBranchName)
            ACCESS_TOKEN: $(azurebot_access_token)
            BUILDID: $(Build.BuildId)
            STATUS: Succeeded

  - ${{ if or(eq(variables['Build.Reason'], 'Schedule'), eq(variables['Build.Reason'], 'Manual')) }}:
    - stage: CronNotifier_Fail
      condition: failed()
      dependsOn:
        - SecondPhaseTestsAllowedFail
        - SecondPhaseTests
        - CronTests
        - Release
      jobs:
      - job: notify
        pool:
          vmImage: ubuntu-20.04
        steps:
        - bash: |
            sudo apt-get install httpie xonsh
            http --version
        - bash: xonsh ./tools/send_matrix_message.xsh
          env:
            ROOMID: '%21JYqfIVJjWANcHnfktY:cadair.com'  # sunpy development room
            HOMESERVER: 'https://matrix.cadair.com'
            BRANCH: $(Build.SourceBranchName)
            ACCESS_TOKEN: $(azurebot_access_token)
            BUILDID: $(Build.BuildId)
            STATUS: Failed
